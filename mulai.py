import base64

encoded_script = ""

try:
    exec(base64.b64decode(encoded_script).decode())
except Exception as e:
    print(str(e))
